# Configuration for Equinix API specs
apis:
  # Metal API - uses different auth (X-Auth-Token) and base path
  metal:
    auth_type: "metal_token"
    service_name: "metal"
    include:
      - findPlans
      - findMetros
    format:
      # Human-readable text format for plans - simplified and robust
      findPlans: |
        (if type == "array" then . else .plans end) | 
        if length == 0 then 
          "No plans available."
        else
          map(
            "**" + (.name // .slug // "Unknown Plan") + "**\n" +
            "- ID: " + (.id // "N/A") + "\n" +
            "- Slug: " + (.slug // "N/A") + "\n" +
            (if .description then "- Description: " + .description + "\n" else "" end) +
            (if .pricing.hour then "- Hourly Price: $" + (.pricing.hour | tostring) + "\n" else "" end) +
            (if .available_in then "- Available in " + (.available_in | length | tostring) + " locations\n" else "" end) +
            (if .specs then 
              "- Hardware: " + (
                [
                  (if .specs.cpus then (.specs.cpus | length | tostring) + " CPU types" else null end),
                  (if .specs.memory then (.specs.memory.total // "Memory available") else null end),
                  (if .specs.drives then (.specs.drives | length | tostring) + " storage options" else null end)
                ] | map(select(. != null)) | join(", ")
              ) + "\n" 
            else "" end) +
            "---\n"
          ) | join("\n")
        end
      
      # Simple metro listing
      findMetros: |
        (.metros | map(.code + " - " + .name + " (" + .country + ")") | sort | join("\n")) + 
        "\n\nTotal metros: " + (.metros | length | tostring)
    specs:
      - url: "https://docs.equinix.com/api-catalog/metalv1/openapi.yaml"
        overlay: "overlays/metal.yaml"

  # Network Edge API
  network-edge:
    auth_type: "client_credentials"
    service_name: "network-edge"
    include:
      - getMetrosUsingGET
    enabled: true
    format:
      # Human-readable metros listing with pagination
      getMetrosUsingGET:
        - |
          "**Network Edge Metros**\n\n" +
          (.data | map(
            "• **" + (.metroCode // "??") + "** - " + (.metroDescription // "Unknown") + " (" + (.region // "No region") + ")" +
            (if .defaultIbx then " [IBX: " + .defaultIbx + "]" else "" end) +
            (if .clusterSupported then " [Cluster supported]" else "" end)
          ) | join("\n")) + 
          "\n\n" +
          (if .pagination then 
            (if .pagination.total <= .pagination.limit then 
              "**Total:** " + (.pagination.total | tostring) + " metros"
            else
              "**Page:** " + (((.pagination.offset // 0) / (.pagination.limit // 20) + 1) | floor | tostring) + 
              "/" + (((.pagination.total // 0) / (.pagination.limit // 20)) | ceil | tostring) + 
              " (showing " + (.data | length | tostring) + " of " + (.pagination.total | tostring) + " total metros)"
            end)
          else
            "**Total:** " + (.data | length | tostring) + " metros"
          end)
    specs:
      - url: "https://docs.equinix.com/api-catalog/network-edgev1/openapi.yaml"
        overlay: "overlays/network-edge.yaml"

  # Fabric API
  fabric:
    auth_type: "client_credentials"
    service_name: "fabric"
    include:
      - searchConnections
      - searchProviders
      - getMetros
    format:
      # Human-readable connection summary
      searchConnections:
        summary: |
          "Found " + (.data | length | tostring) + " connections:\n\n" +
          (.data | map("• " + .name + " (" + .uuid + ") - " + .state + " " + .type) | join("\n"))
        
        detailed: |
          .data | map(
            "**" + .name + "** (" + .uuid + ")\n" +
            "- State: " + .state + "\n" +
            "- Type: " + .type + "\n" +
            "- Description: " + (.description // "No description") + "\n" +
            "- Speed: " + (.speed // "Not specified") + " Mbps\n" +
            (if .bandwidth then "- Bandwidth: " + (.bandwidth | tostring) + " Mbps\n" else "" end) +
            (if .project then "- Project: " + .project.name + "\n" else "" end) +
            (if .redundancy then "- Redundancy: " + .redundancy.group + "\n" else "" end) +
            "---"
          ) | join("\n\n") | . + "\n\nTotal connections: " + (.data | length | tostring)
        
        default: |
          "**Connection Summary**\n\n" +
          (.data | map(
            .name + " → " + .state + " (" + .type + ")" +
            (if .speed then " @ " + (.speed | tostring) + "Mbps" else "" end)
          ) | join("\n")) + 
          "\n\n**Total:** " + (.data | length | tostring) + " connections"
      
      # Human-readable metros listing
      getMetros:
        summary: |
          "**Fabric Metro Summary**\n\n" +
          "Found " + (.data | length | tostring) + " metros (of " + (.pagination.total | tostring) + " total):\n\n" +
          (.data | map("• **" + (.code // "??") + "** - " + (.name // "Unknown") + " (" + (.region // "No region") + ")") | join("\n"))
        
        detailed: |
          "**Fabric Metro Details**\n\n" +
          "Showing " + (.data | length | tostring) + " of " + (.pagination.total | tostring) + " metros:\n\n" +
          (.data | map(
            "**" + (.name // "Unknown Metro") + "** (" + (.code // "??") + ")\n" +
            "- Region: " + (.region // "Not specified") + "\n" +
            "- Equinix ASN: " + (.equinixAsn // "N/A" | tostring) + "\n" +
            "- Max Local VC Bandwidth: " + ((.localVCBandwidthMax // 0 | tostring) + " Mbps") + "\n" +
            (if .geoCoordinates then 
              "- Location: " + (.geoCoordinates.latitude | tostring) + "°N, " + (.geoCoordinates.longitude | tostring) + "°E\n"
            else "" end) +
            (if .geoScopes and (.geoScopes | length > 0) then
              "- Geo Scopes: " + (.geoScopes | join(", ")) + "\n"
            else "" end) +
            (if .services and (.services | length > 0) then
              "- Services: " + (.services | map(.type) | join(", ")) + "\n"
            else "" end) +
            "- Connected to " + ((.connectedMetros // [] | length) | tostring) + " other metros\n" +
            (if .connectedMetros and (.connectedMetros | length > 0) then
              "  Top connections by latency:\n" +
              (.connectedMetros | sort_by(.avgLatency // 999) | .[0:5] | map(
                "    • " + (.code // "??") + " (" + ((.avgLatency // "N/A") | tostring) + "ms, " + ((.remoteVCBandwidthMax // 0) | tostring) + " Mbps max)"
              ) | join("\n")) + 
              (if (.connectedMetros | length) > 5 then "\n    ... and " + (((.connectedMetros | length) - 5) | tostring) + " more" else "" end) + "\n"
            else "" end) +
            "---"
          ) | join("\n\n"))
        
        default: |
          "**Fabric Metros**\n\n" +
          (.data | map(
            (.code // "??") + " → " + (.name // "Unknown") + " (" + (.region // "No region") + ")" +
            (if .connectedMetros then " [" + ((.connectedMetros | length) | tostring) + " connections]" else "" end)
          ) | join("\n")) + 
          "\n\n**Total:** " + (.data | length | tostring) + " metros shown (of " + (.pagination.total | tostring) + " total)"
    specs:
      - url: "https://docs.equinix.com/api-catalog/fabricv4/openapi.yaml"
        overlay: "overlays/fabric.yaml"

  # Billing API
  billing:
    auth_type: "client_credentials"
    service_name: "billing"
    specs:
      - url: "https://docs.equinix.com/api-catalog/billingv2/openapi.yaml"
        overlay: "overlays/billing.yaml"
  # SmartView APIs
  smartview:
    service_name: "smartview"
    include:
      - getLocationHierarchy
    specs:
      - url: "https://docs.equinix.com/api-catalog/environmentalv1/openapi.yaml"
      - url: "https://docs.equinix.com/api-catalog/environmentalv2/openapi.yaml"
      - url: "https://docs.equinix.com/api-catalog/feed-subscriptionv2/openapi.yaml"
      - url: "https://docs.equinix.com/api-catalog/hierarchyv1/openapi.yaml"
      - url: "https://docs.equinix.com/api-catalog/ibx-assetsv1/openapi.yaml"
      - url: "https://docs.equinix.com/api-catalog/powerv1/openapi.yaml"
      - url: "https://docs.equinix.com/api-catalog/system-alertsv2/openapi.yaml"

# Authentication configuration
auth:
  # Client Credentials flow for most APIs
  client_credentials:
    token_url: "https://api.equinix.com/oauth2/v1/token"

  # Metal API uses different auth
  metal_token:
    header_name: "X-Auth-Token"

# Output configuration
output:
  merged_spec_path: "merged-openapi.yaml"
# Documentation configuration
docs:
  sitemap_url: "https://docs.equinix.com/sitemap.xml"
  cache_path: "cache/docs/sitemap_cache.xml"
arazzo:
   specs:
      - config/workflows.yaml

