[project]
name = "equinix-mcp-server"
version = "0.1.0"
description = "MCP Server for agentive tasks against Equinix APIs"
authors = [
    { name = "displague", email = "displague@example.com" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.8"
dependencies = [
    "mcp>=1.0.0",
    "fastmcp>=0.1.0",
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0.0",
    "click>=8.0.0",
    "aiofiles>=23.0.0",
    "jsonschema>=4.0.0",
    "openapi-spec-validator>=0.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
equinix-mcp-server = "equinix_mcp_server.main:main"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
include = ["equinix_mcp_server*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]