name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e '.[dev]'
        
    - name: Lint with flake8
      run: |
        flake8 src tests --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src tests --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
        
    - name: Format check with black
      run: |
        black --check src tests
        
    - name: Import sort check with isort
      run: |
        isort --check-only src tests
        
    - name: Type check with mypy
      run: |
        mypy src
        
    - name: Test with pytest
      run: |
        pytest tests/ --cov=src --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      continue-on-error: true
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  validate-config:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        
    - name: Validate configuration
      run: |
        python -c "from equinix_mcp_server.config import Config; Config.load('config/apis.yaml')"
        echo "✅ Configuration is valid"
        
    - name: Test spec fetching (dry run)
      run: |
        # This would test spec fetching without actually running the server
        python -c "
        import asyncio
        from equinix_mcp_server.config import Config
        from equinix_mcp_server.spec_manager import SpecManager
        
        async def test():
            config = Config.load('config/apis.yaml')
            manager = SpecManager(config)
            print('✅ SpecManager initialization successful')
        
        asyncio.run(test())
        "